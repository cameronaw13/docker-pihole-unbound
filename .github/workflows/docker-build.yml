name: Autobuild and push image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of srevice, privacy policy, and support
# documentation.

on:
  push:
    paths:
      - Dockerfile
      - '.github/workflows/docker-publish.yml'
      - '.github/workflows/auto-merge.yml'

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: docker.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: cameronaw13/pihole-unbound

    #DOCKER_METADATA_OUTPUT_TAGS: |-
    #  docker.io/cameronaw13/pihole-unbound:main
    #  docker.io/cameronaw13/pihole-unbound:dependabot-docker-pihole-pihole-2023.02.2

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Multi-platform support
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      
      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: type=ref,event=branch
      
      - name: Format release tags
        id: format
        #run: echo branch=$(echo "${{ env.DOCKER_METADATA_OUTPUT_TAGS }}" | sed -n '1p' | sed -r "s/(.*:)(.*)/\2/g" | sed -r "s/dependabot-docker-pihole-pihole-(.*)/\1/g") >> $GITHUB_OUTPUT
        run: >-
            branch="";
            while read -r line;
            do
                branch+="${{ env.IMAGE_NAME }}:$(echo "$line" | sed -r "s/(.*:)(.*)/\2/g" | sed -r "s/dependabot-docker-pihole-pihole-(.*)/\1/g"),";
            done <<< $(echo "${{ env.DOCKER_METADATA_OUTPUT_TAGS }}");
            echo tags=${branch%?} >> $GITHUB_OUTPUT;
      
      # Build and push Docker image with Buildx
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64, linux/arm/v7, linux/arm/v6
          push: true
          tags: ${{ steps.format.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
